// TODO: better way
use "ili9341.dnc";
use "life.dnc";

fn main() {
    var device: Ili9341 <- #{
        dc_bank = 0, dc_pin = 1,
        rst_bank = 0, rst_pin = 2,
    };

    ili9341_init(&device);
    ili9341_fill_screen(&device, 0); // Black
    ili9341_half_second_delay();

    LIFE_BUFFER_A[4]  = 0b0000001100000;
    LIFE_BUFFER_A[6]  = 0b0000010010000;
    LIFE_BUFFER_A[8]  = 0b0000100001000;
    LIFE_BUFFER_A[10] = 0b0001000000100;
    LIFE_BUFFER_A[12] = 0b0001000000100;
    LIFE_BUFFER_A[14] = 0b0000100001000;
    LIFE_BUFFER_A[16] = 0b0000010010000;
    LIFE_BUFFER_A[18] = 0b0000001100000;
    
    // Start with buffer A, and draw it un-evolved for reference
    var new_buffer_is_a: bool = false;
    draw_life(&device, &LIFE_BUFFER_B, &LIFE_BUFFER_A);

    loop {
        ili9341_half_second_delay();

        if new_buffer_is_a {
            life_evolve(&LIFE_BUFFER_B, &LIFE_BUFFER_A);
            draw_life(&device, &LIFE_BUFFER_B, &LIFE_BUFFER_A);
        } else {
            life_evolve(&LIFE_BUFFER_A, &LIFE_BUFFER_B);
            draw_life(&device, &LIFE_BUFFER_A, &LIFE_BUFFER_B);
        }
        new_buffer_is_a = !new_buffer_is_a;

        // logger_send("\r\nEvolution done\r\n");
    }
}

fn draw_box(device: *Ili9341, x: u16, y: u16, c: u16) {
    var _c: u16 = c; // Hack: can't take pointer to argument
    ili9341_set_x_range(device, x, x + 6);
    ili9341_set_y_range(device, y, y + 6);

    ili9341_begin_ramwr(device);
    var i: u16 = 0;
    while i < (7 * 7) {
        ili9341_data_many(device, &_c, 2);
        i = i + 1;
    }
}

fn draw_life(device: *Ili9341, old_buffer: *u16, new_buffer: *u16) {
    var row: u16 = 0;
    while row < LIFE_ROWS {
        var col: u16 = 0;
        while col < LIFE_COLS {
            // Redraw the cell if it's changed
            var old_cell: u16 = life_get_cell(old_buffer, row, col);
            var new_cell: u16 = life_get_cell(new_buffer, row, col);
            if !(old_cell == new_cell) {
                if new_cell > 0 {
                    draw_box(device, row * 7, col * 7, 0xFFFF);
                } else {
                    draw_box(device, row * 7, col * 7, 0);
                }
            }

            col = col + 1;
        }

        row = row + 1;
    }
}

