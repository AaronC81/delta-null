; set built-in LED to output
putl r1, 0x10
puth r1, 0xF0
putl r2, 0x01
puth r2, 0x00
write r1, r2

; r0 is always toggle
putl r0, toggle/lo
puth r0, toggle/hi

main:
    putl r2, dot/lo
    puth r2, dot/hi

    putl r3, dash/lo
    puth r3, dash/hi

    call r2
    call r2
    call r2
    call r3
    call r3
    call r3
    call r2
    call r2
    call r2

    putl r4, delay/lo
    puth r4, delay/hi
    call r4
    call r4
    call r4
    call r4
    call r4
    call r4

    jmpoff main/offset

; flashes a dot - assumes LED is off when called
; trashes r4, r5, r6, r7
dot:
    movso r5, rp
    putl r4, delay/lo
    puth r4, delay/hi
    
    call r0
    call r4
    call r0
    call r4

    movsi rp, r5
    ret

; flashes a dash - assumes LED is off when called
; trashes r4, r5, r6, r7
dash:
    movso r5, rp
    putl r4, delay/lo
    puth r4, delay/hi
    
    call r0
    call r4
    call r4
    call r4
    call r0
    call r4
    call r4
    call r4

    movsi rp, r5
    ret

; delays one time unit
; trashes r6 and r7
delay:
    ; busy-waits for 0xFFFF cycles
    putl r6, 0xFF ; r6 = counter
    puth r6, 0xFF
    loop:
        dec r6
        eqz r6
        inv
        cjmpoff loop/offset
    ret

; toggles the LED
; trashes r6 and r7
toggle:
    putl r6, 0x12
    puth r6, 0xF0
    read r7, r6
    not r7
    write r6, r7
    
    ret
